import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
class Stack{
    int top;
    int[] stack;
    Stack(int n){
        this.top = -1;
        stack = new int[n];
    }
    void push(int X){
        stack[++top] = X;
    }
    int pop(){
        return (top <0) ? -1 : stack[top--];
    }
    int size(){
        return top+1;
    }
    int empty(){
        return (top <0) ? 1 : 0;
    }
    int top(){
        return (top <0) ? -1 : stack[top];
    }
}

public class Main {
    public static void main(String args[]) throws IOException {
        int i,j;
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        StringBuilder sb = new StringBuilder();
        int N = Integer.parseInt(br.readLine());
        Stack s = new Stack(N);
        for (i = 0; i< N; i++){
            st = new StringTokenizer(br.readLine());
            switch (st.nextToken()){
                case "push":
                    int X = Integer.parseInt(st.nextToken());
                    s.push(X);
                    break;
                case "pop":
                    sb.append(s.pop()).append("\n");
                    break;
                case "size":
                    sb.append(s.size()).append("\n");
                    break;
                case "empty":
                    sb.append(s.empty()).append("\n");
                    break;
                case "top":
                    sb.append(s.top()).append("\n");
                    break;
            }
        }
        System.out.print(sb);
    }
}
