import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main {
    static int dp[] = new int[41];
    static int count[][] = new int[41][2]; //0은 index 0, 1은 index 1
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder();
        int T = Integer.parseInt(br.readLine());
        int num[] = new int[T];

        int min = 0;
        for(int i = 0; i< T; i++){
            int n = Integer.parseInt(br.readLine());
            num[i] = n;
            if(n > min){
                min = n;
            }
        }
        fibo(min);
        for(int i = 0; i <T ;i++){
            sb.append(count[num[i]][0]+" "+count[num[i]][1]).append("\n");
        }

        System.out.print(sb);

    }
    static void fibo(int n){
        dp[0] = 0;
        count[0][0]++;
        dp[1] = 1;
        count[1][1]++;
        dp[2] = 1;
        count[2][0]++;
        count[2][1]++;
           for(int i =3; i<=n; i++){
               dp[i] = dp[i-1] + dp[i-2];
               count[i][0] = count[i-1][0] + count[i-2][0];
               count[i][1] = count[i-1][1] + count[i-2][1];


           }
    }

}
